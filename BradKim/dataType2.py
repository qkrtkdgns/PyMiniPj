''' [ 문자열 포맷(Format) ]
   : 문자열 내에 어떤 특정 값을 변화시키는 방법

 예> 현재 날짜는 6월 20일 입니다.
	 ....
	 ....
       현재 날짜는 6월 21일 입니다.

'''
#숫자 대입
print( "제 나이는  %d 살 입니다." %20)

print( "제 나이는  %d 살 입니다." %21)

#문자열 대입

print("저의 이름은 %s 입니다" %"홍길동")
print("저의 이름은 %s 입니다" %"고길동")

# 숫자형 변수로 대입
age = 22
print("제 나이는 %d 살입니다." %age)

# 여러 개의 값을 대입하기
age = 22
name = "김말똥"
print("저의 이름은 %s 입니다. 나이는 %d 입니다." %(name, age))

''' 포맷 코드
%s : 문자열(String)
%d : 정수(Integer)
%f :실수형(float)
%c : 문자(character)
%o : 8진수
%x : 16진수
%% : 리터럴 %

'''

# print("완치될 확률은 %d% 입니다" %70)
print("완치될 확률은 %d%% 입니다" %70)

''' [포맷코드의 활용예]

  소숫점 표현하기 '''

print("%0.5f" %2.454545)

#정렬과 공백처리

print("%10s" %"hello")
print("%-10s" %"hello")

print("%-6sPython!!" %'Hello') 

''' 
3) 리스트(list)
: 다른 언어의 배열과 같은 형을 의미한다.

 리스트의 예> aa = [10, 20 , 30]
                  movies = ["트랜스포모", "국제시장", "명량"]
				  bb = [10, 20, "명량", "국제시장"] 
				  cc =[10, 20,["명량", "국제시장"]]
				  dd =[] 빈리스트
     ** 리스트 내에는 어떠한 자료형도 포함시킬 수 있다.

[리스트의 인덱싱과 슬라이싱]	 
'''
aa= [10, 20, 30]

print(aa[0])

print(aa)

print(aa[1]+aa[2])

print(aa[-1]) #인덱스 값이 -인경우에는 뒤에서 부터 요소를 가리킨다.

bb = [10,20,30,["ab", "cd", "ef"]] # 이중 리스트구조

print(bb[0])
print(bb[-1])
print(bb[3])


print(bb[-1][1])

cc=[10,20,['aa', 'bb', 'cc',["국제시장", "명량"]]]  # 삼중 리스트구조

print(cc[2][3][0]) # 삼중리스트구조에서 인덱싱 하기

# [리스트의 슬라이싱]

ab = [1,10, 100, 1000, 10000]

print(ab[:3])

ab = "110100100010000"
print(ab[:3])

bc = [1,10,100,['aa','bb','cc'],1000, 10000]
print(bc[2:5])

print(bc[3][1:])

#리스트 연산 (+, *:반복)
aa = [10, 20, 30]

bb = [100,200,300]

print (aa+bb)


print(aa*2)

#리스트의 값을 변경하기

print(aa[1])

aa[1]=100 # 문자열, 튜플의 형의 요소값은 변경할 수 없지만, 리스트의 요소값은 변경할 수 있다.
print(aa)

print(aa[2:])
aa[2:] = ["국제시장", "명량"]
print(aa)

print(aa[1:3])

aa[1:3] = ["백", "천", "만"]

print(aa)

aa[4] = ["십만", "백만", "천만"]

print(aa)

aa[1:4] = [] # 요소 삭제 : 인덱스1에서 4까지 삭제

print(aa)

del aa[0] # del함수를 이용한 삭제 방법 del(파이썬 내장함수) del 객체(모든 자료형)
 

print (aa)

''' 4) 튜플(tuple) : 리스트와 비슷한 자료형이다.
  - 리스트와 튜플의 차이점
    . 리스트는 [ ], 튜플은 ( ) 를 사용한다.
	. 리스트는 요소의 변경(수정, 삭제, 생성)이 가능하지만, 튜플은 요소의 값을 변경할 수 없다.

  사용예>
  tu = () --> 빈값이 들어 있는 형태
  tu2 = (1,)
  tu3 =(10, 20, 30,40)
  tu4 = 10,20,30
  tu5 = ("국제시장", "명량",("ab", "cd"))

.튜플의 인덱싱, 슬라이싱, 연산
'''

tu = ('a','b','c', 10, 1000)

print(tu[0])

print(tu[2:])

tu2 = ('d', 'e', 'f')
print(tu+tu2)

print(tu*3)


del tu2[2] #튜플은 문자열처럼 요소를 변경하는 것을 허용하지 않는다.







